Lembre-se de usar as funções apropriadas da biblioteca
string.h, como `strlen`, `strcpy`, `strcat`, `strcmp`,
`strncpy`.

1. **Soma de elementos em um array**: dado o int array[5] =
{1,2,3,4,5}, Escreva um programa que calcule a soma de
todos os elementos em um array de inteiros.
//indice 0 1 2 3 4
// int arr[] = {1,2,3,4,5};
// int n = sizeof(arr) / sizeof(arr[0]);
// int soma = 0;
// for ( int i = 0; i < n; i++)
// {
// soma += arr[i];
// }
// printf("Soma %d ", soma);

2. **Média de elementos em um array**:dado o float array[] =
{1.5, 2.5, 3.5, 4.5, 5.5} Escreva um programa que calcule a
média dos elementos em um array de ponto flutuante.
// float array[] = {1.5, 2.5, 3.5, 4.5, 5.5};
// int n = sizeof(array) / sizeof(array[0]);
// float soma = 0;
// float media = 0;
// for (int i = 0; i < n; i++) {
// soma += array[i];
// }
// media = soma / n;
// printf("A média dos elementos é: %.2f\n", media);

3. **Contagem de caracteres em uma string**:
Escreva um programa que leia uma string do usuário e conte
quantos caracteres a string possui, excluindo o caractere nulo
de terminação '\0'. Em seguida, exiba o resultado.
// char str[100];
// printf("Digite uma string: ");
// fgets(str, sizeof(str), stdin);
// str[strcspn(str, "\n")] = '\0'; // para desconsiderar o
caractere de nova linha
// int comprimento = strlen(str); // -1 para
desconsiderar o caractere de nova linha
// printf("A string possui %d caracteres.\n",
comprimento);

4. **Concatenação de strings**:
Escreva um programa que leia duas strings do usuário e
concatene-as em uma terceira string. Em seguida, exiba a
string resultante.
// char str1[100], str2[100], resultado[200];
// printf("Digite a primeira string: ");
// fgets(str1, sizeof(str1), stdin);
// printf("Digite a segunda string: ");
// fgets(str2, sizeof(str2), stdin);
// strcpy(resultado, str1);
// strcat(resultado, str2);
// printf("String concatenada: %s", resultado);

5. **Comparação de strings**:
Escreva um programa que leia duas strings do usuário e
compare-as para determinar se são iguais ou diferentes. Exiba
o resultado da comparação.
// char str1[100], str2[100];
// printf("Digite a primeira string: ");
// fgets(str1, sizeof(str1), stdin);
// printf("Digite a segunda string: ");
// fgets(str2, sizeof(str2), stdin);
// if (strcmp(str1, str2) == 0) {
// printf("As strings são iguais.\n");
// } else {
// printf("As strings são diferentes.\n");
// }

6. **Cópia de strings**:
Escreva um programa que leia uma string do usuário e copie-
a para outra string. Em seguida, exiba a string copiada.
// char str1[100], str2[100];
// printf("Digite uma string: ");
// fgets(str1, sizeof(str1), stdin);
// // Copiar str1 para str2
// strcpy(str2, str1);
// printf("String copiada para str2: %s", str2);

7. **Inversão de uma string**:
Escreva um programa que leia uma string do usuário e
inverta os caracteres na string. Em seguida, exiba a string
invertida.
// char str[100];
// printf("Digite uma string: ");
// fgets(str, sizeof(str), stdin);
// str[strcspn(str, "\n")] = '\0';
// int len = strlen(str);
// for (int i = len; i >= 0; i--) {
// printf("%c", str[i]);
// }
// printf("\n");

8. **Contagem de ocorrências de uma letra em uma string**:
Escreva um programa que leia uma string e uma letra do
usuário e conte quantas vezes a letra aparece na string. Exiba
o resultado.
// char str[200];
// char letra;
// int count = 0;
// printf("Digite uma string: ");
// fgets(str, sizeof(str), stdin);
// printf("Digite uma letra para contar: ");
// scanf(" %c", &letra);
// for (int i = 0; str[i] != '\0'; i++) {
// if (str[i] == letra) {
// count++;
// }
// }
// printf("A letra '%c' aparece %d vezes na string.\n",
letra, count);
